{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "next/core-web-vitals",
    "prettier",
    "eslint:recommended",
    "plugin:tailwindcss/recommended",
    "airbnb",
    "airbnb-typescript",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": [
      "./tsconfig.json"
    ]
  },
  "plugins": [
    "react",
    "prettier",
    "@typescript-eslint",
    "react-hooks",
    "tailwindcss"
  ],
  "rules": {
    "tailwindcss/classnames-order": "warn",
    "tailwindcss/no-custom-classname": "warn",
    "tailwindcss/no-contradicting-classname": "error",

    "import/no-extraneous-dependencies": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/ban-types": "off",
    "import/prefer-default-export": "off",
    "react/react-in-jsx-scope": "off",
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/prop-types": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "off",
    "no-undef": "off",
    "no-param-reassign": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-props-no-spreading": "off",
    "no-underscore-dangle": "off",
    "import/no-cycle": "off",
    "jsx-a11y/anchor-is-valid": "off",
    "react/require-default-props": "off",
    "import/no-absolute-path": "off",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "no-console": [
      "error",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "off",
      {
        "selector": "variable",
        "types": [
          "boolean"
        ],
        "format": [
          "camelCase"
        ],
        "prefix": [
          "is",
          "should",
          "has",
          "can",
          "did",
          "will"
        ]
      },
      {
        "selector": "function",
        "format": [
          "camelCase",
          "PascalCase"
        ]
      },
      {
        "selector": "parameter",
        "format": [
          "camelCase",
          "snake_case"
        ]
      }
    ]
  }
}